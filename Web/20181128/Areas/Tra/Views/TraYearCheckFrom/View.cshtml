@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Home.cshtml";
}


@model SRM.Model.Tra.TraYearCheckFromModel
<form class="layui-form layui-form-pane" action="/Tra/TraYearCheckFrom/EditYearCheckFrom" method="post">
    <div class="layui-card">
        <div class="layui-card-header">年度评估模板建立查看</div>
        <div class="layui-card-body" style="overflow:hidden;">
            <div class="layui-form-item">
                <label class="layui-form-label">说明</label>
                <div class="layui-input-block">
                    <textarea id="txtRemark" name="Remark" maxlength="100" class="layui-textarea" disabled>@Model.Remark</textarea>
                    <input id="hdCheckFromId" name="CheckFromId" value="@Model.CheckFromId" type="hidden" />
                </div>
            </div>
        </div>
    </div>
    <div class="layui-card">
        <div class="layui-card-header">自定义元件信息</div>
        <div class="layui-card-body" style="overflow:hidden;"> 
            <div class="layui-form">
                <div class="forzenbox">
                    <div class="normaltable ">
                        <table class="layui-table">
                            <thead>
                                <tr>
                                    <th style="text-align:left;">元件编号</th>
                                    <th>项目</th>
                                    <th>分类</th>
                                    <th>考核项目</th>
                                    <th>考核内容</th>
                                    <th>考核办法</th>
                                    <th>标准得分</th>
                                    <th>评分最大值</th>
                                    <th>评分最小值</th> 
                                </tr>
                            </thead>
                            <tbody id="ComponentList" style="min-height:400px;"></tbody>
                        </table>
                    </div> 
                </div>
                <div id="PageComponent" class="pagebox">
                    <div id="PageForComponent" class="pagination"></div><div id="ComponentAmount" class="pagedetail">共0条记录</div>
                </div>
                <script type="text/html" id="temslist">
                    {{each list as c}}
                    <tr>
                        <td>{{c.CheckComponentNumber}}</td>
                        <td>{{c.CheckComponentTypeName}}</td>
                        <td>{{c.Classify}}</td>
                        <td>{{c.CheckProject}}</td>
                        <td>{{c.ContentsDescribe}}</td>
                        <td>{{c.CheckMethod}}</td>
                        <td>{{c.StandardScore}}</td>
                        <td>{{c.MaxScore}}</td>
                        <td>{{c.MinScore}}</td> 
                    </tr>
                    {{/each}}
                </script> 
            </div>
        </div>
    </div>
    <div class="layui-card">
        <div class="layui-card-header">模版附件类型信息</div>
        <div class="layui-card-body" style="overflow:hidden;"> 
            <table class="layui-table">
                <thead>
                    <tr>
                        <th>附件名称</th>
                        <th>附件唯一</th>
                        <th>说明</th>
                        <th>状态</th> 
                    </tr>
                </thead>
                <tbody id="AdjunctTypeList" style="min-height:400px;"></tbody>
            </table>
            <script type="text/html" id="TempAdjunctList">
                {{each list as c}}
                <tr>
                    <td>{{c.AdjunctName}}</td>
                    <td>{{c.AdjunctOnlyName}}</td>
                    <td>{{c.Remark}}</td>
                    <td>{{c.StateName}}</td> 
                </tr>
                {{/each}}
            </script>
            <div class="layui-form-item" style="margin-top:10px;">
                <div class="layui-input-block" style="width:14%;margin:0 auto !important;"> 
                    <a class="layui-btn" id="btnGoBack">返回</a>
                </div>
            </div>
        </div>
    </div>
</form>
@section scripts{
    <script>

        layui.use(['form', 'element', 'laydate', 'upload'], function () {
            var form = layui.form, ele = layui.element, laydate = layui.laydate;

            // 新增自定义元件
            $(document).on('click', '#btnComponent', function () {
                GetComponent();
            });

            // 作废自定义元件
            $(document).on('click', '.btnInvalidComponent', function () {
                var tId = $(this).data("id");
                InvalidComponent(tId);
            });

            // 新增模版附件类型
            $(document).on('click', '#btnAdjunctType', function () {
                GetAdjunctType();
            });

            // 作废模板附件类型
            $(document).on('click', '.btnInvalidAdjunct', function () {
                var tId = $(this).data("id");
                var tState = $(this).data("state");
                InvalidAdjunct(tId, tState);
            });

            // 提交保存
            form.on('submit(btnSave)', function (data) {
                $.ajax({
                    type: "POST",
                    url: "/Tra/TraYearCheckFrom/EditYearCheckFrom",
                    data: data.field,
                    async: false,
                    success: function (data) {
                        if (data.flag == 'success') {
                            layui.layer.msg('保存成功！');
                            location.href = '/Tra/TraYearCheckFrom/Index';
                        }
                        if (data.flag == "fail") {
                            layui.layer.msg('保存失败！');
                        }
                    }
                });
                return false;
            });

            // 返回
            $(document).on('click', '#btnGoBack', function () {
                location.href = '/Tra/TraYearCheckFrom/Index';
            });
        });

        $(function () {
            // 查询模版明细信息TraYearCheckFromComponent(运输年度绩效自定义元件表)
            SearchComponentData();

            // 查询模版附件类型TraYearCheckFromAdjunct(运输年度考核表单自定义附件明细)
            SearchAdjunctTypeData();

            // 考核类型下拉列表赋值
            $("#txtCheckFromType").val($("#hdCheckFromType").val());

            // 编辑
            $(document).on('click', '.btnEdit', function () {
                var tId = $(this).data("id");
                ModifyData(tId);
            });
        });

        // 定义页面索引及显示条数
        var pageIndex = 0;
        var pageSize = 15;

        // 查询模版明细信息
        // 查询模版明细信息Count
        function SearchComponentData() {

            // 总记录数
            var amount = 0;

            // 页面索引
            pageIndex = 0;

            // 等待时显示
            $("#ComponentList").html("<tr class='loadings' ><td colspan=8>数据加载中……<td></tr>");

            // 模版明细信息Amount
            $.ajax({
                type: "POST",
                url: "/Tra/TraYearCheckFrom/YearCheckFromComponentCount",
                async: false,
                data: {
                    tId: $("#hdCheckFromId").val()
                },
                success: function (data) {
                    amount = data;
                    $("#ComponentAmount").text("共" + amount + "条");
                }
            });

            // 分页配置
            $("#PageForComponent").pagination(amount, {
                callback: PageCallbackForComponent,
                prev_text: '<',       //上一页按钮里text
                next_text: '>',       //下一页按钮里text
                items_per_page: pageSize,  //显示条数
                num_display_entries: 6,    //连续分页主体部分分页条目数
                current_page: pageIndex,   //当前页索引
                num_edge_entries: 2        //两侧首尾分页条目数
            });
        }

        // 分页参数
        function PageCallbackForComponent(indexs,jq) {
            pageIndex = indexs;
            GetComponentList(indexs);
        }

        // 查询模版明细信息List
        function GetComponentList(pageIndexs) {
            var userjosn = {
                index: (pageIndex + 1),
                size: pageSize,
                tId: $("#hdCheckFromId").val()
            };

            // 模版明细信息List
            $.ajax({
                type: "POST",
                dataType: "json",
                url: '/Tra/TraYearCheckFrom/YearCheckFromComponentList',
                data: userjosn,
                success: function (data) {
                    $("#ComponentList").html(template('temslist', { list: data })); 
                    $("#PageComponent").show();
                    if (data.length == 0) {
                        $("#PageComponent").hide();
                        $("#ComponentList").html("<div class='nodata'>暂无数据</div>")
                    }
                }
            });
        }

        // 新增自定义元件
        function GetComponent() {
            top.window.topdialog = top.layui.layer.open({
                type: 2,
                shade: 0.2,
                title: '自定义元件新增',
                content: '/Tra/TraYearCheckFrom/Component?url=/Tra/TraYearCheckFrom/Index&tId=' + $("#hdCheckFromId").val() + "&tType=edit",
                area: ['1000px', '600px'],
            });
        }

        // 作废自定义元件
        function InvalidComponent(tId, tState) {
            top.layer.confirm('您确定作废此数据吗？', ['确定', '取消'], function () {
                $.ajax({
                    type: "POST",
                    url: '/Tra/TraYearCheckFrom/InvalidYearCheckFromComponent',
                    data: { tId: tId },
                    dataType: "json",
                    success: function (data) {
                        if (data.flag == "success") {
                            top.layer.closeAll();
                            SearchComponentData();
                        }
                        if (data.flag == "noauth") {
                            top.layer.msg(data.content);
                        }
                        if (data.flag == "fail") {
                            top.layer.msg(data.content);
                        }
                    }
                });
            }, function () { }
            );
        }

        // 查询模版附件类型
        // 查询模版附件类型List
        function SearchAdjunctTypeData() {
            var userjosn = {
                tId: $("#hdCheckFromId").val()
            };

            // 模版附件类型List
            $.ajax({
                type: "POST",
                dataType: "json",
                url: '/Tra/TraYearCheckFrom/YearCheckFromAdjunctList',
                data: userjosn,
                success: function (data) {
                    $("#AdjunctTypeList").html(template('TempAdjunctList', { list: data }));
                    if (data.length == 0) {
                        $("#AdjunctTypeList").html("<div class='nodata'>暂无数据</div>")
                    }
                }
            });
        }

        // 编辑模版附件类型
        function ModifyData(tId) {
            top.window.topdialog = top.layui.layer.open({
                type: 2,
                shade: 0.2,
                title: '模版附件类型编辑',
                content: '/Tra/TraYearCheckFrom/AdjunctTypeDetail?url=/Tra/TraYearCheckFrom/Index&tId=' + tId,
                area: ['600px', '400px'],
            });
        }

        // 新增模版附件类型
        function GetAdjunctType() {
            top.window.topdialog = top.layui.layer.open({
                type: 2,
                shade: 0.2,
                title: '模版附件类型新增',
                content: '/Tra/TraYearCheckFrom/AdjunctType?url=/Tra/TraYearCheckFrom/Index&checkFromId=' + $("#hdCheckFromId").val() + '&type=edit',
                area: ['600px', '400px'],
            });
        }

        // 作废模板附件类型
        function InvalidAdjunct(tId, tState) {
            if (tState == '0') {
                top.layer.msg('本数据无效状态，不需重复作废！');
                return;
            }
            top.layer.confirm('您确定作废此数据吗？', ['确定', '取消'], function () {
                $.ajax({
                    type: "POST",
                    url: '/Tra/TraYearCheckFrom/InvalidYearCheckFromAdjunct',
                    data: { tId: tId },
                    dataType: "json",
                    success: function (data) {
                        if (data.flag == "success") {
                            top.layer.closeAll();
                            SearchAdjunctTypeData();
                        }
                        if (data.flag == "noauth") {
                            top.layer.msg(data.content);
                        }
                        if (data.flag == "fail") {
                            top.layer.msg(data.content);
                        }
                    }
                });
            }, function () { }
            );
        }
    </script>
}


